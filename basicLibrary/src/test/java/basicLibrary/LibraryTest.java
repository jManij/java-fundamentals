/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basicLibrary;

import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class LibraryTest {
    @Test
    public void roll() {
        Library classUnderTest = new Library();
        assertEquals(5, classUnderTest.roll(5).length);
        assertEquals(6, classUnderTest.roll(6).length);

    }

    @Test
    public void containsDuplicates() {
        Library classUnderTest = new Library();
        assertTrue("Should return true",  classUnderTest.containsDuplicates(new int[]{1,2,3,4,5,6,1}));
        assertFalse("Should return false", classUnderTest.containsDuplicates(new int[]{1,2,3,4,5,6,7}));

    }

    @Test
    public void calculateAverages() {
        Library classUnderTest = new Library();
        assertEquals("The output expected",3, classUnderTest.calculateAverages(new int[]{1,2,3,4, 5}));
    }

    @Test
    public void averageOfArraysOfArrays() {
        Library classUnderTest = new Library();
        assertEquals("Received wrong output",57,classUnderTest.averageOfArraysOfArrays(new int[][]{
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        }));
    }

    @Test
    public void analyzeWeatherData() {
        Library test = new Library();
        assertEquals("Never saw temperature: 63\n" +
                "Never saw temperature: 67\n" +
                "Never saw temperature: 68\n" +
                "Never saw temperature: 69\n", test.analyzeWeatherData(new int[][]{
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        }));


    }

    @Test
    public void tally() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        Library test = new Library();
        assertEquals("Bush received the most votes!", test.tally(votes));
    }
}
